// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      =  "file:./../database.sqlite"
}


model User {
  id          Int      @id @default(autoincrement())
  name        String
  lastName    String
  username    String   @unique
  email       String   @unique
  password    String
  profileImage String
  posts       Post[]
  comments    Comment[]
  likes       Like[]
  followers   Follow[] @relation("Followers")
  following   Follow[] @relation("Following")
}
model Post {
  id          Int      @id @default(autoincrement())
  content     String
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id])
  date        DateTime @default(now())
  comments    Comment[]
  likes       Like[]
}

model Comment {
  id         Int      @id @default(autoincrement())
  content    String
  authorId   Int
  author     User     @relation(fields: [authorId], references: [id])
  postId     Int
  post       Post     @relation(fields: [postId], references: [id])
  date       DateTime @default(now())
  likes      Like[]
}

model Like {
  id        Int      @id @default(autoincrement())
  date      DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  postId    Int?
  post      Post?     @relation(fields: [postId], references: [id])
  commentId Int?
  comment   Comment? @relation(fields: [commentId], references: [id])
}

model Follow {
  id       Int      @id @default(autoincrement())
  date    DateTime @default(now())
  followerId Int
  follower   User     @relation("Followers", fields: [followerId], references: [id])
  followedId Int
  followed   User     @relation("Following", fields: [followedId], references: [id])
}
